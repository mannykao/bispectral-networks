python rotation_experiment_analysis.py
Bispectral Neural Networks - Rotation Experiment..
load_checkpoint(logdir=../logs/rotation_model/)
weights.dtype=dtype('complex64'), weights.shape=(256, 16, 16)
torch.Size([3600, 256])
Equivariance
Invariance
Generalization
torch.Size([360, 256])
The model successfully classified 100.00% of the orbit on average.
The model misclassified 0.00% of the orbit on average.
adversarial Robustness
torch.Size([10, 256])
Iter: 100 | Distance: 0.18137922883033752
Final Distance: 0.09988655894994736
------------------------------------------
Bispectral Neural Networks - Rotation Experiment..
load_checkpoint(logdir=../logs/rotation_model/)
weights.dtype=dtype('complex64'), weights.shape=(256, 16, 16)
torch.Size([3600, 256])
Equivariance
Invariance
Generalization
torch.Size([360, 256])
The model successfully classified 100.00% of the orbit on average.
The model misclassified 0.00% of the orbit on average.
adversarial Robustness
torch.Size([10, 256])
Iter: 100 | Distance: 0.11851368099451065
Final Distance: 0.09954265505075455
---------------------------------------------------
Bispectral Neural Networks - Rotation Experiment..
torchutils.onceInit device = cuda:0
initSeeds(0)
load_checkpoint(logdir=../logs/rotation_model/)
weights.dtype=dtype('complex64'), weights.shape=(256, 16, 16)
torch.Size([3600, 256])

Equivariance

Invariance

Generalization
 knn_dataset.data.shape=torch.Size([360, 256])
 The model successfully classified 100.00% of the orbit on average.
 The model misclassified 0.00% of the orbit on average.
time spend on Elapsed Time:  method = 111.77s

adversarial Robustness
 torch.Size([10, 256])
 Iter: 100 | Distance: 0.11544143408536911
 Final Distance: 0.09971080720424652
========================================

Standalone test:
================
Equivariance

Invariance

Generalization
 knn_dataset.data.shape=torch.Size([360, 256])
 The model successfully classified 100.00% of the orbit on average.
 The model misclassified 0.00% of the orbit on average.
time spend on Elapsed Time:  method = 111.77s

adversarial Robustness
----------------------
 robustness_dataset.data.shape=torch.Size([10, 256])
 Iter: 100 | Distance: 0.1056475043296814
 Final Distance: 0.09939227998256683
 time spend on Elapsed Time:  method = 79.53s

adversarial Robustness
initSeeds(1)
 robustness_dataset.data.shape=torch.Size([10, 256])
 Final Distance: 0.0981995016336441
 time spend on Elapsed Time:  method = 38.00s
